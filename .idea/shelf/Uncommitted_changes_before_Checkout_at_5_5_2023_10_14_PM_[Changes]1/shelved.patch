Index: src/main/java/SpreadsheetUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.itextpdf.text.*;\r\nimport com.itextpdf.text.pdf.PdfWriter;\r\nimport com.itextpdf.text.pdf.PdfPTable;\r\n//import com.itextpdf.text.Font;\r\n\r\n\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.table.DefaultTableCellRenderer;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport javax.swing.table.TableCellRenderer;\r\nimport java.awt.*;\r\nimport java.awt.Font;\r\nimport java.awt.event.*;\r\nimport java.io.FileOutputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nclass SpreadsheetUI extends JFrame {\r\n    private JTable table;\r\n    private DefaultTableModel model;\r\n    private JScrollPane scrollPane;\r\n    private JLabel titleLabel;\r\n    private JPanel topPanel;\r\n\r\n    int additionalElectivesRow;\r\n\r\n    int approvedElectivesRow;\r\n\r\n    Map<String, Integer> coursePositionMappings;\r\n    Map<String,String> couseNameMappings;\r\n\r\n    private Student student;\r\n    private String studentName;\r\n    private String studentID;\r\n    private String semesterAdmitted;\r\n    private boolean fastTrack = false;\r\n    private boolean thesis = false;\r\n\r\n    private String anticipatedGrad;\r\n    private int rowCounter = 0;\r\n\r\n    private int defaultRowHeight = 16;\r\n\r\n    public void setCourseNames() {\r\n\r\n    }\r\n\r\n    //Sets up the blank degree plan for each respective track\r\n    public void setupByTrack(String track) {\r\n        //Going to use a map to determine where each course listing is\r\n        //First int is the row\r\n        String[] coreCoursesCodes;\r\n        String[] levelingCoursesCodes;\r\n        String[] trackElectivesCodes;\r\n\r\n        String[] coreCoursesNames;\r\n        String[] levelingCoursesNames;\r\n        String[] trackElectivesNames;\r\n\r\n        coursePositionMappings = new HashMap<>();\r\n        couseNameMappings = new HashMap<>();\r\n\r\n        ArrayList<String> approvedElectives = new ArrayList<>();\r\n        ArrayList<String> additionalElectives = new ArrayList<>();\r\n\r\n        switch (track) {\r\n\r\n            case \"Data Science\":\r\n                coreCoursesCodes = new String[]{\"CS6313\", \"CS6350\", \"CS6363\", \"CS6375\"}; // Add core courses for this track\r\n                coreCoursesNames = new String[]{\"Statistical Methods for Data Sciences\",\"Big Data Management and Analytics\",\"Design and Analysis of Computer Algorithms\",\"Machine Learning\"};\r\n                setupCores(coreCoursesCodes,coreCoursesNames);\r\n\r\n                trackElectivesCodes =new String[]{\"CS6301\", \"CS6320\", \"CS6327\", \"CS6347\", \"CS6360\"};\r\n                trackElectivesNames = new String[]{\"Social Network Analytics\",\"Natural Language Processing\",\"Video Analytics\",\"Statistics for Machine Learning\",\"Database Design\"};\r\n                setupTrackElectives(trackElectivesCodes,trackElectivesNames);\r\n\r\n                setupApprovedElectives();\r\n                setupAdditionalElectives();\r\n\r\n                levelingCoursesCodes =new String[]{\"CS5303\", \"CS5330\", \"CS5333\", \"CS5343\", \"CS5348\", \"CS3341\"};\r\n                levelingCoursesNames = new String[]{\"Computer Science I\",\"Computer Science II\",\"Discrete Structures\",\"Algorithm Analysis & Data Structures\",\"Operating System Concepts\",\"Probability & Statistics in CS\"};\r\n                setupLeveling(levelingCoursesCodes,levelingCoursesNames);\r\n                break;\r\n            // Add cases for other tracks and their respective core and elective courses\r\n            case \"Systems\":\r\n\r\n                coreCoursesCodes = new String[]{\"CS6304\", \"CS6363\", \"CS6378\", \"CS6396\"};\r\n                coreCoursesNames = new String[]{\"Computer Architecture\",\"Design and Analysis of Computer Algorithms\",\"Advanced Operating Systems\",\"Real-Time Systems\"};\r\n                setupCores(coreCoursesCodes, coreCoursesNames);\r\n\r\n                trackElectivesCodes = new String[]{\"CS6349\",\"CS6376\",\"CS6380\",\"CS6397\",\"CS6399\"};\r\n                trackElectivesNames = new String[]{\"Network Security\",\"Parallel Processing\",\"Parallel Processing\",\"Synthesis and Opt. of High-Perf. Systems\",\"Parallel Architectures and Systems\"};\r\n                setupTrackElectives(trackElectivesCodes, trackElectivesNames);\r\n\r\n                setupApprovedElectives();\r\n                setupAdditionalElectives();\r\n\r\n                levelingCoursesCodes = new String[]{\"CS5303\",\"CS5330\",\"CS5333\",\"CS5343\",\"CS5348\",\"CS5390\"};\r\n                levelingCoursesNames = new String[]{\"Computer Science I\",\"Computer Science II\",\"Discrete Structures\",\"Algorithm Analysis & Data Structures\",\"Operating System Concepts\",\"Computer Networks **\"};\r\n                setupLeveling(levelingCoursesCodes, levelingCoursesNames);\r\n                break;\r\n            case \"Interactive Computing\":\r\n                coreCoursesCodes = new String[]{\"CS6326\", \"CS6363\"};\r\n                coreCoursesNames = new String[]{\"Human Computer Interaction\",\"Design and Analysis of Computer Algorithms\"};\r\n\r\n                setupCores(coreCoursesCodes, coreCoursesNames);\r\n\r\n                trackElectivesCodes = new String[]{\"CS6323\", \"CS6328\", \"CS6331\", \"CS6334\", \"CS6366\"};\r\n                trackElectivesNames = new String[]{\"Computer Animation and Gaming\",\"Modeling and Simulation\",\"Multimedia Systems\",\"Virtual Reality\",\"Computer Graphics\"};\r\n                setupTrackElectives(trackElectivesCodes, trackElectivesNames);\r\n\r\n                setupApprovedElectives();\r\n                setupAdditionalElectives();\r\n\r\n                levelingCoursesCodes = new String[]{\"CS5303\", \"CS5330\", \"CS5333\", \"CS5343\", \"CS5348\"};\r\n                levelingCoursesNames = new String[]{\"Computer Science I\",\"Computer Science II\",\"Discrete Structures\",\"Algorithm Analysis & Data Structures\",\"Operating System Concepts\"};\r\n                setupLeveling(levelingCoursesCodes, levelingCoursesNames);\r\n                break;\r\n            case \"Cyber Security\":\r\n                coreCoursesCodes = new String[]{\"CS6324\", \"CS6363\", \"CS6378\"};\r\n                coreCoursesNames = new String[]{\"Information Security\",\"Design and Analysis of Computer Algorithms\",\"Advanced Operating Systems\"};\r\n\r\n                setupCores(coreCoursesCodes, coreCoursesNames);\r\n\r\n                trackElectivesCodes = new String[]{\"CS6332\", \"CS6348\", \"CS6349\", \"CS6377\"};\r\n                trackElectivesNames = new String[]{\"System Security & Malicious Code Analysis\",\"Data and Applications Security\",\"Network Security\",\"Introduction To Cryptography\"};\r\n                setupTrackElectives(trackElectivesCodes, trackElectivesNames);\r\n\r\n                setupApprovedElectives();\r\n                setupAdditionalElectives();\r\n\r\n                levelingCoursesCodes =new String[]{\"CS5303\", \"CS5330\", \"CS5333\", \"CS5343\", \"CS5348\", \"CS5390\"};\r\n                levelingCoursesNames = new String[]{\"Computer Science I\",\"Computer Science II\",\"Discrete Structures\",\"Algorithm Analysis & Data Structures\",\"Operating System Concepts\",\"Computer Networks\"};\r\n                setupLeveling(levelingCoursesCodes, levelingCoursesNames);\r\n                break;\r\n            case \"Intelligent Systems\":\r\n                coreCoursesCodes = new String[]{\"CS6320\", \"CS6363\", \"CS6364\", \"CS6375\"};\r\n                coreCoursesNames = new String[]{\"Natural Language Processing\",\"Design and Analysis of Computer Algorithms\",\"Artificial Intelligence\",\"Machine Learning\"};\r\n                setupCores(coreCoursesCodes, coreCoursesNames);\r\n\r\n                trackElectivesCodes = new String[]{\"CS6360\", \"CS6378\"};\r\n                trackElectivesNames = new String[]{\"Database Design\",\"Advanced Operating Systems\"};\r\n                setupTrackElectives(trackElectivesCodes, trackElectivesNames);\r\n\r\n                setupApprovedElectives();\r\n                setupAdditionalElectives();\r\n\r\n                levelingCoursesCodes =new String[]{\"CS5303\", \"CS5330\", \"CS5343\", \"CS5333\", \"CS5348\"};\r\n                levelingCoursesNames = new String[]{\"Computer Science I\",\"Computer Science II\",\"Discrete Structures\",\"Algorithm Analysis & Data Structures\",\"Operating System Concepts\"};\r\n                setupLeveling(levelingCoursesCodes, levelingCoursesNames);\r\n                break;\r\n\r\n            case \"Networks and Telecommunications\":\r\n                coreCoursesCodes = new String[]{\"CS6352\", \"CS6363\", \"CS6378\", \"CS6385\", \"CS6390\"};\r\n                coreCoursesNames = new String[]{\"Perf. of Computer Systems and Networks\",\"Design and Analysis of Computer Algorithms\",\"Advanced Operating Systems\",\"Algorithmic Aspects of Telecomm. Networks\",\"Advanced Computer Networks\"};\r\n                setupCores(coreCoursesCodes, coreCoursesNames);\r\n\r\n                setupApprovedElectives();\r\n                setupAdditionalElectives();\r\n\r\n                levelingCoursesCodes =new String[]{\"CS5303\", \"CS5330\", \"CS5333\", \"CS5343\", \"CS5348\", \"CS5390\", \"CS3341\"};\r\n                levelingCoursesNames = new String[]{\"Computer Science I\",\"Computer Science II\",\"Discrete Structures\",\"Algorithm Analysis & Data Structures\",\"Operating System Concepts\",\"Computer Networks\",\"\"};\r\n                setupLeveling(levelingCoursesCodes, levelingCoursesNames);\r\n                break;\r\n            case \"Traditional Computer Science\":\r\n                coreCoursesCodes = new String[]{\"CS6363\", \"CS6378\", \"CS6390\"};\r\n                coreCoursesNames = new String[]{\"Design and Analysis of Computer Algorithms\",\"Advanced Operating Systems\",\"Advanced Computer Networks\"};\r\n                setupCores(coreCoursesCodes, coreCoursesNames);\r\n\r\n                trackElectivesCodes = new String[]{\"CS6353\", \"CS6360\", \"CS6371\"};\r\n                trackElectivesNames = new String[]{\"Compiler Construction\",\"Database Design\",\"Advanced Programming Languages\"};\r\n                setupTrackElectives(trackElectivesCodes, trackElectivesNames);\r\n\r\n                setupApprovedElectives();\r\n                setupAdditionalElectives();\r\n\r\n                levelingCoursesCodes =new String[]{\"CS5303\", \"CS5330\", \"CS5333\", \"CS5343\", \"CS5348\", \"CS5349\", \"CS5390\"};\r\n                levelingCoursesNames = new String[]{\"Computer Science I\",\"Computer Science II\",\"Discrete Structures\",\"Algorithm Analysis & Data Structures\",\"Operating System Concepts\",\"Automata Theory\",\"Computer Networks\"};\r\n                setupLeveling(levelingCoursesCodes, levelingCoursesNames);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    private void setupCores(String[] coreCoursesCodes, String[] coresNames) {\r\n        Object[] row = new Object[]{\"\",\"\",\"\"};\r\n        model.addRow(row);\r\n        model.setValueAt(\"Core Courses\",rowCounter,0);\r\n        model.setValueAt(\"(15 Credit Hours)\",rowCounter,1);\r\n        model.setValueAt(\"3.19 Grade Point Average Required\",rowCounter,2);\r\n        rowCounter++;\r\n        for (int i = 0;i < coresNames.length;i++) {\r\n            coursePositionMappings.put(coreCoursesCodes[i],rowCounter);\r\n\r\n            row = new Object[]{\"\",\"\",\"\",\"\",\"\"};\r\n            model.addRow(row);\r\n            model.setValueAt(coresNames[i],rowCounter,0);\r\n            model.setValueAt(coreCoursesCodes[i],rowCounter,1);\r\n            rowCounter++;\r\n        }\r\n    }\r\n\r\n    public void addCores(ArrayList<Course> cores) {\r\n        for (Course course: cores) {\r\n            addCourse(course);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private void setupTrackElectives(String[] trackElectivesCodes, String[] trackElectives) {\r\n        Object[] row = new Object[]{\"\"};\r\n        model.addRow(row);\r\n        model.setValueAt(\"of The Following Required\",rowCounter,0);\r\n        rowCounter++;\r\n        for (int i = 0;i < trackElectives.length;i++) {\r\n            coursePositionMappings.put(trackElectivesCodes[i],rowCounter);\r\n            row = new Object[]{\"\",\"\",\"\",\"\",\"\"};\r\n            model.addRow(row);\r\n            model.setValueAt(trackElectives[i],rowCounter,0);\r\n            model.setValueAt(trackElectivesCodes[i],rowCounter,1);\r\n            rowCounter++;\r\n        }\r\n    }\r\n\r\n\r\n    public void addTrackElectives(ArrayList<Course> trackElectives) {\r\n\r\n        for (Course course: trackElectives) {\r\n            addCourse(course);\r\n        }\r\n\r\n    }\r\n\r\n    private void setupApprovedElectives() {\r\n        Object[] row = new Object[]{ \"\", \"\", \"\"};\r\n\r\n        model.addRow(row);\r\n        model.setValueAt(\"FIVE APPROVED 6000 LEVEL ELECTIVES\",rowCounter,0);\r\n        model.setValueAt(\"(15* Credit Hours)\",rowCounter,1);\r\n        model.setValueAt(\"3.0 Grade Point Average\",rowCounter,2);\r\n        rowCounter++;\r\n        approvedElectivesRow = rowCounter;\r\n        for(int i = 0;i < 5;i++) {\r\n\r\n\r\n            row = new Object[]{\"\",\"\",\"\",\"\",\"\"};\r\n            model.addRow(row);\r\n            rowCounter++;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //columns:\r\n    //0 = course name\r\n    //1 = course code\r\n    //2 = semester\r\n    //3 = transfer\r\n    //4 = grade\r\n    public void addApprovedElectives(ArrayList<Course> approvedElectives) {\r\n\r\n        for (int i = 0;i < approvedElectives.size();i++) {\r\n\r\n            Course currentCourse = approvedElectives.get(i);\r\n\r\n            if(Integer.parseInt(currentCourse.getCourseCode().substring(2,3)) >= 6) {\r\n                model.setValueAt(currentCourse.getCourseName(),approvedElectivesRow+i,0);\r\n                model.setValueAt(currentCourse.getCourseCode(),approvedElectivesRow+i,1);\r\n                model.setValueAt(currentCourse.getSemester(),approvedElectivesRow+i,2);\r\n                model.setValueAt(currentCourse.getGrade(),approvedElectivesRow+i,4);\r\n            }\r\n            else {\r\n                addAdditionalElective(currentCourse);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private void setupAdditionalElectives() {\r\n        Object[] row = new Object[]{\"\"};\r\n        model.addRow(row);\r\n        model.setValueAt(\"Additional Electives (3 Credit Hours Minimum)\",rowCounter,0);\r\n        rowCounter++;\r\n        additionalElectivesRow = rowCounter;\r\n        for (int i = 0;i < 3;i++) {\r\n            row = new Object[]{\"\",\"\",\"\",\"\",\"\"};\r\n            model.addRow(row);\r\n            rowCounter++;\r\n        }\r\n    }\r\n\r\n\r\n    public void addAdditionalElective(Course elective) {\r\n//        Object[] row = new Object[]{\"\"};\r\n//        model.addRow(row);\r\n//        model.setValueAt(\"Additional Electives (3 Credit Hours Minimum)\",rowCounter,0);\r\n//        rowCounter++;\r\n        model.setValueAt(elective.getCourseName(),additionalElectivesRow,0);\r\n        model.setValueAt(elective.getCourseCode(),additionalElectivesRow,1);\r\n        model.setValueAt(elective.getSemester(),additionalElectivesRow,2);\r\n        model.setValueAt(elective.getGrade(),additionalElectivesRow,4);\r\n        additionalElectivesRow++;\r\n\r\n    }\r\n\r\n    private void setupLeveling(String[] levelingCoursesCodes, String[] levelingCourses) {\r\n        Object[] row = new Object[]{\"\", \"\", \"\", \"\", \"\", \"\"};\r\n        model.addRow(row);\r\n        model.setValueAt(\"Admission Prerequisites\",rowCounter,0);\r\n        model.setValueAt(\"Course\",rowCounter,1);\r\n        model.setValueAt(\"UTD Semester\",rowCounter,2);\r\n        model.setValueAt(\"Waiver\",rowCounter,3);\r\n        model.setValueAt(\"Grade\",rowCounter,4);\r\n        rowCounter++;\r\n        for (int i=0;i < levelingCourses.length;i++) {\r\n            coursePositionMappings.put(levelingCoursesCodes[i],rowCounter);\r\n\r\n            row = new Object[]{\"\",\"\",\"\",\"\",\"\"};\r\n            model.addRow(row);\r\n            model.setValueAt(levelingCourses[i],rowCounter,0);\r\n            model.setValueAt(levelingCoursesCodes[i],rowCounter,1);\r\n            rowCounter++;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public void addCourse(Course course) {\r\n\r\n//      Columns:\r\n//      0 = course name\r\n//      1 = course code\r\n//      2 = semester\r\n//      4 = grade\r\n\r\n        String courseCode = course.getCourseCode();\r\n\r\n        if(coursePositionMappings.containsKey(courseCode)) {\r\n            model.setValueAt(course.getSemester(),coursePositionMappings.get(courseCode),2);\r\n            model.setValueAt(course.getGrade(),coursePositionMappings.get(courseCode),4);\r\n        }\r\n\r\n\r\n    }\r\n    public void addCourse(String courseName,String courseCode,String semester, String grade) {\r\n\r\n\r\n//      Columns:\r\n//      0 = course name\r\n//      1 = semester\r\n//      3 = grade\r\n\r\n        Object[] row = new Object[]{\"\", \"\", \"\", \"\", \"\", \"\"};\r\n        model.addRow(row);\r\n        model.setValueAt(courseName, rowCounter, 0);\r\n        model.setValueAt(courseCode,rowCounter,1);\r\n        model.setValueAt(semester, rowCounter, 2);\r\n        //  model.setValueAt(\"Course Transfer\", rowCounter, 2);\r\n        model.setValueAt(grade, rowCounter, 4);\r\n        rowCounter++;\r\n\r\n    }\r\n\r\n    public void addSpanningRow(String value) {\r\n        Object[] rowData = new Object[model.getColumnCount()];\r\n        for (int i = 0; i < rowData.length; i++) {\r\n            if (i == 0) {\r\n                // First column should span all columns\r\n                rowData[i] = value;\r\n            } else {\r\n                rowData[i] = \"\";\r\n            }\r\n        }\r\n        model.addRow(rowData);\r\n        int lastRow = model.getRowCount() - 1;\r\n        int lastCol = model.getColumnCount() - 1;\r\n        table.setRowHeight(lastRow,16 );\r\n        table.getCellRenderer(lastRow, 0).getTableCellRendererComponent(table, value, false, false, lastRow, 0);\r\n        for (int i = 1; i < rowData.length; i++) {\r\n            table.setValueAt(\"\", lastRow, i);\r\n        }\r\n        table.setValueAt(value, lastRow, 0);\r\n    }\r\n\r\n\r\n\r\n\r\n    public SpreadsheetUI(String studentName,String studentID,String semesterAdmitted,boolean isFastTrack, boolean isThesis,String track) {\r\n\r\n        // Add a button to clear the selection\r\n\r\n\r\n        super(\"Degree Plan Editor\");\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setLayout(new BorderLayout());\r\n\r\n\r\n        JLabel titleLabel1 = new JLabel(\"Degree Plan\", SwingConstants.CENTER);\r\n        titleLabel1.setFont(new Font(\"Arial\", Font.BOLD, 24));\r\n\r\n        JLabel titleLabel2 = new JLabel(\"University of Texas at Dallas\", SwingConstants.CENTER);\r\n        titleLabel2.setFont(new Font(\"Arial\", Font.BOLD, 24));\r\n\r\n\r\n        JLabel titleLabel3 = new JLabel(\"Master of Computer Science\",SwingConstants.CENTER);\r\n        titleLabel3.setFont(new Font(\"Arial\", Font.BOLD,24));\r\n\r\n        JLabel trackLabel = new JLabel(track,SwingConstants.CENTER);\r\n        trackLabel.setFont(new Font(\"Arial\", Font.BOLD,24));\r\n\r\n        JPanel titlePanel = new JPanel(new GridLayout(4, 1));\r\n        titlePanel.add(titleLabel1);\r\n        titlePanel.add(titleLabel2);\r\n        titlePanel.add(titleLabel3);\r\n        titlePanel.add(trackLabel);\r\n        add(titlePanel, BorderLayout.NORTH);\r\n\r\n\r\n\r\n     //   JButton closeButton = new JButton(\"Finish Editing and Save\");\r\n\r\n\r\n\r\n\r\n\r\n        // Set up the table\r\n        model = new DefaultTableModel();\r\n        table = new JTable(model);\r\n        table.setRowHeight(20);\r\n        table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\r\n        scrollPane = new JScrollPane(table);\r\n        add(scrollPane, BorderLayout.CENTER);\r\n\r\n        // Add columns\r\n        String[] columnHeaders = new String[]{ \"Course Title\", \"Course Number\" ,\"UTD Semester\", \"Transfer\", \"Grade\"};\r\n        model.setColumnIdentifiers(columnHeaders);\r\n\r\n\r\n\r\n        // Set up header renderer and editor\r\n        table.getTableHeader().setDefaultRenderer(new HeaderRenderer());\r\n        table.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()));\r\n\r\n\r\n        table.addKeyListener(new KeyAdapter() {\r\n            public void keyPressed(KeyEvent e) {\r\n                if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {\r\n                    table.clearSelection();\r\n                }\r\n            }\r\n        });\r\n\r\n        // Set up the bottom panel with editable text fields for selected cells\r\n        JPanel bottomPanel = new JPanel(new GridLayout(1, 0));\r\n        add(bottomPanel, BorderLayout.SOUTH);\r\n        table.getSelectionModel().addListSelectionListener(e -> {\r\n            int[] selectedRows = table.getSelectedRows();\r\n            int[] selectedCols = table.getSelectedColumns();\r\n            bottomPanel.removeAll();\r\n            if (selectedRows.length == 1 && selectedCols.length == 1) {\r\n                JTextField field = new JTextField((String) table.getValueAt(selectedRows[0], selectedCols[0]));\r\n                field.addActionListener(e2 -> {\r\n                    table.setValueAt(field.getText(), selectedRows[0], selectedCols[0]);\r\n                });\r\n                bottomPanel.add(field);\r\n            } else {\r\n                bottomPanel.revalidate();\r\n                bottomPanel.repaint();\r\n            }\r\n        });\r\n        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        this.studentName =studentName;\r\n        this.studentID = studentID;\r\n        this.semesterAdmitted = semesterAdmitted;\r\n        this.fastTrack = isFastTrack;\r\n        this.thesis = isThesis;\r\n        setupByTrack(track);\r\n        addFields(studentName,studentID,semesterAdmitted,fastTrack,thesis);\r\n\r\n\r\n        //adding separate fields for name, fast track, thesis, etc\r\n\r\n\r\n\r\n        //Buttons\r\n\r\n//        JPanel buttonPanel = new JPanel(new BorderLayout());\r\n//        JButton addButton = new JButton(\"Add Row\");\r\n//        JButton saveAsPdfButton = new JButton(\"Save as PDF\");\r\n//        buttonPanel.add(addButton,BorderLayout.NORTH);\r\n//        buttonPanel.add(saveAsPdfButton, BorderLayout.NORTH);\r\n//\r\n//        //  buttonPanel.add(closeButton, BorderLayout.NORTH);\r\n//        add(buttonPanel, BorderLayout.EAST);\r\n\r\n        JPanel buttonPanel = new JPanel();\r\n        buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.Y_AXIS));\r\n\r\n\r\n        JButton addButton = new JButton(\"Add Row\");\r\n        JButton saveAsPdfButton = new JButton(\"Save as PDF\");\r\n\r\n        buttonPanel.add(saveAsPdfButton);\r\n        buttonPanel.add(addButton);\r\n        add(buttonPanel, BorderLayout.EAST);\r\n\r\n\r\n\r\n        addButton.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                // create a dialog or frame to get input from the user\r\n                // for example:\r\n                Object[] row = {\"\", \"\", \"\", \"\", \"\"};\r\n                model.addRow(row);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        table.addMouseListener(new MouseAdapter() {\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n                if (SwingUtilities.isRightMouseButton(e)) {\r\n                    int row = table.rowAtPoint(e.getPoint());\r\n                    if (row >= 0 && table.getSelectedRow() == row) {\r\n                        JPopupMenu popupMenu = new JPopupMenu();\r\n\r\n                        JMenuItem deleteMenuItem = new JMenuItem(\"Delete Row\");\r\n                        deleteMenuItem.addActionListener((event) -> {\r\n                            model.removeRow(row);\r\n                        });\r\n\r\n                        JMenuItem headerMenuItem = new JMenuItem(\"Set as Header\");\r\n                        headerMenuItem.addActionListener((event) -> {\r\n                            Object[] headerRow = {\"\",\"\",\"\",\"\",\"oefkosfeos\"};\r\n//                            for (int i = 0; i < model.getColumnCount(); i++) {\r\n//                                headerRow[i] = model.getValueAt(row, i);\r\n//                            }\r\n                            model.removeRow(row);\r\n                            model.insertRow(row, headerRow);\r\n                            table.setRowSelectionInterval(row, row);\r\n\r\n\r\n\r\n                        });\r\n\r\n                        popupMenu.add(deleteMenuItem);\r\n                        popupMenu.add(headerMenuItem);\r\n                        popupMenu.show(table, e.getX(), e.getY());\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        saveAsPdfButton.addActionListener(e -> {\r\n            JFileChooser fileChooser = new JFileChooser();\r\n            int result = fileChooser.showSaveDialog(SpreadsheetUI.this);\r\n            if (result == JFileChooser.APPROVE_OPTION) {\r\n                try {\r\n                    for (int rows = 0; rows < table.getRowCount(); rows++) {\r\n                        for (int cols = 0; cols < table.getColumnCount(); cols++) {\r\n                            Object cellValue = table.getValueAt(rows, cols);\r\n                            if (cellValue == null) {\r\n                                // assign default value or handle null value\r\n                                table.setValueAt(\"\",rows,cols);\r\n                            }\r\n                        }\r\n                    }\r\n                    Document document = new Document();\r\n                    PdfWriter.getInstance(document, new FileOutputStream(fileChooser.getSelectedFile() + \".pdf\"));\r\n                    document.open();\r\n                    PdfPTable pdfTable = new PdfPTable(table.getColumnCount());\r\n                    pdfTable.setWidthPercentage(100);\r\n\r\n                    Paragraph paragraph = new Paragraph(\"Degree Plan\");\r\n                    paragraph.add(\"\\n\");\r\n                    paragraph.add(\"University of Texas at Dallas\");\r\n                    paragraph.add(\"\\nMaster of Computer Science\");\r\n                    paragraph.add(\"\\n\" + track );\r\n                    paragraph.setAlignment(Element.ALIGN_CENTER);\r\n                    document.add(paragraph);\r\n\r\n                    paragraph.clear();\r\n\r\n                    paragraph.setAlignment(Element.ALIGN_LEFT);\r\n                    paragraph.add(\"\\n\\nStudent Name: \" + studentName);\r\n                    paragraph.add(\"\\nStudent ID: \" + studentID);\r\n                    paragraph.add(\"\\nSemester Admitted: \" + semesterAdmitted);\r\n                    paragraph.add(\"\\nAnticipated Graduation: \" + anticipatedGrad);\r\n\r\n                    paragraph.add(\"\\n\\nIs Fast Track: \");\r\n                    if (fastTrack) {\r\n                        paragraph.add(\"Yes\");\r\n                    }\r\n                    else {\r\n                        paragraph.add(\"No\");\r\n\r\n                    }\r\n                    paragraph.add(\"\\nIs Thesis Masters: \");\r\n                    if (thesis) {\r\n                        paragraph.add(\"Yes\");\r\n                    }\r\n                    else {\r\n                        paragraph.add(\"No\");\r\n\r\n                    }\r\n\r\n                //    paragraph.setAlignment(Element.ALIGN_TOP);\r\n                    document.add(paragraph);\r\n\r\n                    document.add(Chunk.NEWLINE);\r\n\r\n\r\n\r\n                    for (int i = 0; i < table.getColumnCount(); i++) {\r\n                        pdfTable.addCell(new Phrase(table.getColumnName(i)));\r\n                    }\r\n                    for (int i = 0; i < table.getRowCount(); i++) {\r\n                        for (int j = 0; j < table.getColumnCount(); j++) {\r\n                            pdfTable.addCell(new Phrase(table.getValueAt(i, j).toString()));\r\n                        }\r\n                    }\r\n\r\n\r\n                    document.add(pdfTable);\r\n                    document.close();\r\n                    JOptionPane.showMessageDialog(SpreadsheetUI.this, \"File saved successfully!\");\r\n                } catch (Exception ex) {\r\n                    JOptionPane.showMessageDialog(SpreadsheetUI.this, \"Error: \" + ex.getMessage(), \"Error\", JOptionPane.ERROR_MESSAGE);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        pack();\r\n        setLocationRelativeTo(null);\r\n        setVisible(true);\r\n    }\r\n\r\n    void addFields() {\r\n        addFields(\"\",\"\",\"\",false,false);\r\n    }\r\n\r\n    void addFields(String studentName, String studentID, String semesterAdmitted, boolean isFastTrack, boolean isThesis) {\r\n        //   System.out.println(\"ADDING FIELDS\");\r\n\r\n\r\n        this.studentID = studentID;\r\n        this.studentName = studentName;\r\n        this.semesterAdmitted = semesterAdmitted;\r\n        this.fastTrack = isFastTrack;\r\n        this.thesis = isThesis;\r\n        JPanel bottomPanelTwo = new JPanel(new GridBagLayout());\r\n        add(bottomPanelTwo, BorderLayout.SOUTH);\r\n        GridBagConstraints c = new GridBagConstraints();\r\n        c.insets = new Insets(5, 5, 5, 5);\r\n        c.anchor = GridBagConstraints.WEST;\r\n\r\n\r\n        // student name field\r\n        JLabel nameLabel = new JLabel(\"Student Name: \");\r\n        JTextField nameField = new JTextField(10);\r\n        c.gridx = 0;\r\n        c.gridy = 0;\r\n        bottomPanelTwo.add(nameLabel, c);\r\n        c.gridx = 1;\r\n        c.weightx = 1;\r\n        c.fill = GridBagConstraints.HORIZONTAL;\r\n        bottomPanelTwo.add(nameField, c);\r\n        c.weightx = 0;\r\n  //      c.fill = GridBagConstraints.NONE;\r\n        nameField.setText(studentName);\r\n\r\n        // student id field\r\n        JLabel IDLabel = new JLabel(\"Student ID:\");\r\n        JTextField IDField = new JTextField(10);\r\n        c.gridx = 0;\r\n        c.gridy = 1;\r\n        bottomPanelTwo.add(IDLabel, c);\r\n        c.gridx = 1;\r\n        c.weightx = 1;\r\n        c.fill = GridBagConstraints.HORIZONTAL;\r\n        bottomPanelTwo.add(IDField, c);\r\n        c.weightx = 0;\r\n        c.fill = GridBagConstraints.NONE;\r\n        IDField.setText(studentID);\r\n\r\n\r\n        //semester admitted field\r\n        JLabel SemesterAdmittedLabel = new JLabel(\"Semester Admitted to Program:\");\r\n        JTextField SemesterAdmittedField = new JTextField(10);\r\n        c.gridx = 0;\r\n        c.gridy = 2;\r\n        bottomPanelTwo.add(SemesterAdmittedLabel, c);\r\n        c.gridx = 1;\r\n        c.weightx = 1;\r\n        c.fill = GridBagConstraints.HORIZONTAL;\r\n        bottomPanelTwo.add(SemesterAdmittedField, c);\r\n        c.weightx = 0;\r\n        c.fill = GridBagConstraints.NONE;\r\n        SemesterAdmittedField.setText(semesterAdmitted);\r\n\r\n\r\n        //anticipated graduation field\r\n        JLabel graduationLabel = new JLabel(\"Anticipated Graduation:\");\r\n        JTextField graduationField = new JTextField(10);\r\n        c.gridx = 0;\r\n        c.gridy = 3;\r\n        bottomPanelTwo.add(graduationLabel, c);\r\n        c.gridx = 1;\r\n        c.weightx = 1;\r\n        c.fill = GridBagConstraints.HORIZONTAL;\r\n        bottomPanelTwo.add(graduationField, c);\r\n        c.weightx = 0;\r\n        c.fill = GridBagConstraints.NONE;\r\n\r\n\r\n\r\n        // Add checkbox\r\n        JCheckBox fastTrackCheckBox = new JCheckBox(\"Fast Track\");\r\n        c.gridx = 0;\r\n        c.gridy = 4;\r\n        bottomPanelTwo.add(fastTrackCheckBox, c);\r\n        if (isFastTrack) {\r\n            //   System.out.println(\"FAST TRACK\");\r\n            fastTrackCheckBox.setSelected(true);\r\n\r\n        }\r\n\r\n        JCheckBox thesisCheckBox = new JCheckBox(\"Thesis\");\r\n        c.gridx = 1;\r\n        bottomPanelTwo.add(thesisCheckBox, c);\r\n        if(isThesis) {\r\n            //       System.out.println(\"THESIS\");\r\n            thesisCheckBox.setSelected(true);\r\n        }\r\n\r\n    }\r\n\r\n    private class HeaderRenderer extends DefaultTableCellRenderer {\r\n        public HeaderRenderer() {\r\n            setHorizontalAlignment(JLabel.CENTER);\r\n            setOpaque(true);\r\n            setBackground(Color.lightGray);\r\n            setFont(getFont().deriveFont(Font.BOLD));\r\n        }\r\n\r\n        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n            setText(value.toString());\r\n            return this;\r\n        }\r\n    }\r\n\r\n    private class HeaderEditor extends DefaultCellEditor {\r\n        public HeaderEditor() {\r\n            super(new JTextField());\r\n            setClickCountToStart(1);\r\n        }\r\n\r\n        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {\r\n            JTextField editor = (JTextField) super.getTableCellEditorComponent(table, value, isSelected, row, column);\r\n            editor.setFont(editor.getFont().deriveFont(Font.BOLD));\r\n            editor.setBorder(BorderFactory.createLineBorder(Color.black));\r\n            return editor;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/SpreadsheetUI.java b/src/main/java/SpreadsheetUI.java
--- a/src/main/java/SpreadsheetUI.java	
+++ b/src/main/java/SpreadsheetUI.java	
@@ -518,13 +518,25 @@
         buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.Y_AXIS));
 
 
+        JButton saveStudentButton = new JButton("Save Student");
         JButton addButton = new JButton("Add Row");
         JButton saveAsPdfButton = new JButton("Save as PDF");
 
+        buttonPanel.add(saveStudentButton);
         buttonPanel.add(saveAsPdfButton);
         buttonPanel.add(addButton);
         add(buttonPanel, BorderLayout.EAST);
+        saveAsPdfButton.addActionListener(new ActionListener() {
+
+            @Override
+            public void actionPerformed(ActionEvent e) {
 
+                StudentSaving saveStudent = new StudentSaving();
+
+                saveStudent.saveStudent(student); // Call the saveStudent() method from SavingStudent class
+                // Perform any additional operations after saving the student
+            }
+        });
 
 
         addButton.addActionListener(new ActionListener() {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6b7b8909-2ecc-4460-806b-430f05857073\" name=\"Changes\" comment=\"Fixed formatting some more\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_55_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_55_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_56_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_56_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_57_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_57_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_06_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_06_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_08_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_08_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_22_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_22_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_25_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_25_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_32_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_32_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_4_2023_2_19_AM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_4_2023_2_19_AM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$2.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$3.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderEditor.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderEditor.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderRenderer.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderRenderer.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/SpreadsheetUI.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PJmmatHFDw0Exf5FTzMu4pjtd9\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.DegreePlanApp\">\r\n    <configuration name=\"DegreePlanApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"openjdk-19\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"DegreePlanApp\" />\r\n      <module name=\"CS-Project---Team-8\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"openjdk-19\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"CS-Project---Team-8\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"ArquillianJUnit\" factoryName=\"\" nameIsGenerated=\"true\">\r\n      <option name=\"arquillianRunConfiguration\">\r\n        <value>\r\n          <option name=\"containerStateName\" value=\"\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"CS-Project---Team-8\" />\r\n      <option name=\"VM_PARAMETERS\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" />\r\n      <option name=\"WORKING_DIRECTORY\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"CS-Project---Team-8\" />\r\n      <option name=\"filePath\" />\r\n      <option name=\"vmParameters\" />\r\n      <option name=\"alternativeJrePath\" />\r\n      <option name=\"programParameters\" />\r\n      <option name=\"passParentEnvs\" value=\"true\" />\r\n      <option name=\"workingDirectory\" />\r\n      <option name=\"isAlternativeJrePathEnabled\" value=\"false\" />\r\n      <option name=\"VM_PARAMETERS\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" />\r\n      <option name=\"WORKING_DIRECTORY\" />\r\n      <option name=\"filePath\" />\r\n      <option name=\"vmParameters\" />\r\n      <option name=\"alternativeJrePath\" />\r\n      <option name=\"programParameters\" />\r\n      <option name=\"passParentEnvs\" value=\"true\" />\r\n      <option name=\"workingDirectory\" />\r\n      <option name=\"isAlternativeJrePathEnabled\" value=\"false\" />\r\n      <option name=\"VM_PARAMETERS\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" />\r\n      <option name=\"WORKING_DIRECTORY\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.DegreePlanApp\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6b7b8909-2ecc-4460-806b-430f05857073\" name=\"Changes\" comment=\"\" />\r\n      <created>1683183719671</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1683183719671</updated>\r\n      <workItem from=\"1683183722438\" duration=\"3037000\" />\r\n      <workItem from=\"1683187072502\" duration=\"9756000\" />\r\n      <workItem from=\"1683264796765\" duration=\"1807000\" />\r\n      <workItem from=\"1683269108943\" duration=\"2766000\" />\r\n      <workItem from=\"1683271884919\" duration=\"345000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Fixed formatting some more\">\r\n      <created>1683269831035</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683269831035</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Fixed formatting some more\">\r\n      <created>1683271514699</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683271514699</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Fixed formatting some more\">\r\n      <created>1683271728274</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683271728274</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Fixed formatting some more\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed formatting some more\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -1,33 +1,35 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ArtifactsWorkspaceSettings">
+    <artifacts-to-build>
+      <artifact name="Cap_Proj:jar" />
+    </artifacts-to-build>
+  </component>
   <component name="AutoImportSettings">
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
     <list default="true" id="6b7b8909-2ecc-4460-806b-430f05857073" name="Changes" comment="Fixed formatting some more">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_55_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_55_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_56_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_56_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_57_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_1_57_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_06_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_06_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_08_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_08_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_22_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_22_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_25_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_25_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_32_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_2_32_AM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_4_2023_2_19_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_4_2023_2_19_AM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_5_55_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_5_5_2023_5_55_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/SpreadsheetUI$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/SpreadsheetUI$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/SpreadsheetUI$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/SpreadsheetUI$2.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/SpreadsheetUI$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/SpreadsheetUI$3.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderEditor.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderEditor.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderRenderer.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/SpreadsheetUI$HeaderRenderer.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/SpreadsheetUI.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/SpreadsheetUI.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Startup.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Startup.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/StudentSaving.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/StudentSaving.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Merge.Settings">
+    <option name="BRANCH" value="origin/main" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="main" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
@@ -39,81 +41,36 @@
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
-    <property name="nodejs_package_manager_path" value="npm" />
+    <property name="aspect.path.notification.shown" value="true" />
   </component>
   <component name="RunManager" selected="Application.DegreePlanApp">
-    <configuration name="DegreePlanApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="ALTERNATIVE_JRE_PATH" value="openjdk-19" />
-      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
-      <option name="MAIN_CLASS_NAME" value="DegreePlanApp" />
-      <module name="CS-Project---Team-8" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="ALTERNATIVE_JRE_PATH" value="openjdk-19" />
-      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
-      <option name="MAIN_CLASS_NAME" value="Main" />
-      <module name="CS-Project---Team-8" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
+    <configuration default="true" type="ArquillianTestNG" factoryName="" nameIsGenerated="true">
       <option name="arquillianRunConfiguration">
         <value>
           <option name="containerStateName" value="" />
         </value>
       </option>
-      <option name="TEST_OBJECT" value="class" />
+      <option name="TEST_OBJECT" value="CLASS" />
+      <properties />
+      <listeners />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration default="true" type="JetRunConfigurationType">
-      <module name="CS-Project---Team-8" />
-      <option name="VM_PARAMETERS" />
-      <option name="PROGRAM_PARAMETERS" />
-      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
-      <option name="ALTERNATIVE_JRE_PATH" />
-      <option name="PASS_PARENT_ENVS" value="true" />
-      <option name="MAIN_CLASS_NAME" />
-      <option name="WORKING_DIRECTORY" />
+    <configuration name="DegreePlanApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="ALTERNATIVE_JRE_PATH" value="openjdk-19" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
+      <option name="MAIN_CLASS_NAME" value="DegreePlanApp" />
+      <module name="Cap_Proj" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
-      <module name="CS-Project---Team-8" />
-      <option name="filePath" />
-      <option name="vmParameters" />
-      <option name="alternativeJrePath" />
-      <option name="programParameters" />
-      <option name="passParentEnvs" value="true" />
-      <option name="workingDirectory" />
-      <option name="isAlternativeJrePathEnabled" value="false" />
-      <option name="VM_PARAMETERS" />
-      <option name="PROGRAM_PARAMETERS" />
-      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
-      <option name="ALTERNATIVE_JRE_PATH" />
-      <option name="PASS_PARENT_ENVS" value="true" />
-      <option name="MAIN_CLASS_NAME" />
-      <option name="WORKING_DIRECTORY" />
-      <option name="filePath" />
-      <option name="vmParameters" />
-      <option name="alternativeJrePath" />
-      <option name="programParameters" />
-      <option name="passParentEnvs" value="true" />
-      <option name="workingDirectory" />
-      <option name="isAlternativeJrePathEnabled" value="false" />
-      <option name="VM_PARAMETERS" />
-      <option name="PROGRAM_PARAMETERS" />
-      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
-      <option name="ALTERNATIVE_JRE_PATH" />
-      <option name="PASS_PARENT_ENVS" value="true" />
-      <option name="MAIN_CLASS_NAME" />
-      <option name="WORKING_DIRECTORY" />
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="ALTERNATIVE_JRE_PATH" value="openjdk-19" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
+      <option name="MAIN_CLASS_NAME" value="Main" />
+      <module name="Cap_Proj" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -122,6 +79,9 @@
       <list>
         <item itemvalue="Application.DegreePlanApp" />
         <item itemvalue="Application.Main" />
+        <item itemvalue="Application.DegreePlanApp" />
+        <item itemvalue="Application.Main" />
+        <item itemvalue="Application.Main" />
       </list>
     </recent_temporary>
   </component>
@@ -176,7 +136,6 @@
         </entry>
       </map>
     </option>
-    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Fixed formatting some more" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" project-jdk-name=\"14\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -8,5 +8,5 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" project-jdk-name="14" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" project-jdk-name="openjdk-19" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
